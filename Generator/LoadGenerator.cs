using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Xml;

namespace Generator
{
    [Generator]
    public class LoadGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            string source = $@"// <auto-generated/>
using System;
using System.Reflection;
using System.Collections;

namespace Part1
{{
    public partial class Vault
    {{
        public partial void Load() {{
            this.nodes.Clear();
            string path = this.dirpath + ""\\NodesIn"";
            string[] fileEntries = Directory.GetFiles(path);
            foreach (string fileName in fileEntries)
            {{
                if (Path.GetExtension(fileName) == "".node"")
                {{
                    StreamReader reader = new StreamReader(fileName);
                    Node node = new Node(Path.GetFileNameWithoutExtension(fileName), reader.ReadToEnd());
                    this.Add(node);
                }}
            }}
        }}
    }}
}}
";
            context.AddSource($"ProgramLoad.generated.cs", source);
        }

        public void Initialize(GeneratorInitializationContext context)
        {

        }
    }
}