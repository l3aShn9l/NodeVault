using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Xml;

namespace Generator
{
    [Generator]
    public class SaveGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            string source = $@"// <auto-generated/>
using System;
using System.Reflection;
using System.Collections;

namespace Part1
{{
    public partial class Vault
    {{
        public partial void Save() {{
            string path = this.dirpath + ""\\NodesOut"";
            string[] fileEntries = Directory.GetFiles(path);
            foreach (string fileName in fileEntries)
            {{
                FileInfo fileInfo = new FileInfo(fileName);
                fileInfo.Delete();
            }}
            foreach (Node item in this)
            {{
                StreamWriter writer = new StreamWriter(path + $""\\{{item.Name()}}.node"", false);
                writer.Write(item.Text());
                writer.Close();
            }}
        }}
    }}
}}
";
            context.AddSource($"ProgramSave.generated.cs", source);
        }

        public void Initialize(GeneratorInitializationContext context)
        {

        }
    }
}
